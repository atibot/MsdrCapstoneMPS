% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_timeline_labels.R
\name{geom_timeline_labels}
\alias{geom_timeline_labels}
\title{A geom for labeling the timeline plot from \code{\link{geom_timeline}}}
\usage{
geom_timeline_labels(mapping = NULL, data = NULL, na.rm = TRUE,
  show.legend = NA, stat = "identity", position = "identity",
  inherit.aes = TRUE, n_max = NULL, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{aes}} or
\code{\link{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
   options:

   If \code{NULL}, the default, the data is inherited from the plot
   data as specified in the call to \code{\link{ggplot}}.

   A \code{data.frame}, or other object, will override the plot
   data. All objects will be fortified to produce a data frame. See
   \code{\link{fortify}} for which variables will be created.

   A \code{function} will be called with a single argument,
   the plot data. The return value must be a \code{data.frame.}, and
   will be used as the layer data.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}

\item{n_max}{The top \code{n_max} labels to plot.  For example, if
earthquake occurrences are being plotted, and you only want to label 5
largest earthquakes, by magnitude, pass 5 here}

\item{...}{other arguments passed on to \code{\link{layer}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{color = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}
}
\description{
This geom labels the timeline created from \code{\link{geom_timeline}}. 
 It draws vertical lines up from the points on the timeline, with labels
 for the particular event.
You have the option of only labeleing the top \code{n_max} number of events
 sorted by a specified variable
}
\section{Aesthetics}{

\code{geom_timeline} understands the following aesthetics (required are in
 bold):
\itemize{
  \item \strong{\code{x}}
  \item \strong{\code{label}} The labels to be added
  \item \code{y}
  \item \code{magnatude} The feature whose value determines the top
   \code{n_max} to be labeled
  \item \code{color}
  \item \code{fill}
  \item \code{size}
  \item \code{alpha}
}
}

\section{References}{

\itemize{
 \item geom_text: \url{https://github.com/tidyverse/ggplot2/blob/master/R/geom-text.r}
}
}

\examples{
library(data.table)
raw_noaa <- as.data.table(noaa_data)

## Build date variable
clean_noaa <- eq_clean_data(raw_noaa)
clean_noaa <- eq_location_clean(clean_noaa)

## Set key to date
setkey(clean_noaa, DATE)

## Pull test set of 5 years
eq_subset <- clean_noaa[DATE >= "2005-01-01" & DATE <= "2010-12-31"]

## Subset to 5 countries
top_countries <- eq_subset[,.N,by = COUNTRY][order(-N)][1:5, COUNTRY]
eq_subset <- eq_subset[COUNTRY \%in\% top_countries]

## Set country to factor
eq_subset[, COUNTRY := as.factor(COUNTRY)]

## Set earthquake magnitude to numeric
eq_subset[, EQ_PRIMARY := as.numeric(EQ_PRIMARY)]

## Plot all countries on single time line with labels for 20 largest
# earthquakes.
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31",
  aes(color = DEATHS,size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20,
  aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake()
## Plot each country on it's own horizontal line with labels for 20 largest
# earthquakes
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31",
  aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20,
  aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() +
  labs(y = "")
## Plot each country on it's own horizontal line with labels for 20 largest
# earthquakes. Make all circles the same size.
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31",
  aes(color = DEATHS)) + geom_timeline_labels(n_max = 20,
  aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() +
  labs(y = "")

}
