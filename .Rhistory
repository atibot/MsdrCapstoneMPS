paste(popup_info, "<b>Total deaths:</b>", TOTAL_DEATHS, "<br />"),
popup_info)
return(popup_info)
# earthquake_data <- earthquake_data %>% mutate(popup_info = "")
#
# earthquake_data <- earthquake_data %>%
#   mutate(popup_info = ifelse(
#     !is.na(LOCATION_NAME),
#     paste0(popup_info, "<b>Location:</b>", LOCATION_NAME, "<br />"),
#     popup_info),
#     popup_info = ifelse(
#       !is.na(EQ_PRIMARY),
#       paste(popup_info, "<b>Magnitude:</b>", EQ_PRIMARY, "<br />"),
#       popup_info),
#     popup_info = ifelse(
#       !is.na(TOTAL_DEATHS),
#       paste(popup_info, "<b>Total deaths:</b>", TOTAL_DEATHS, "<br />"),
#       popup_info)
#   )
#
# return(earthquake_data)
}
test <- mexico_quakes %>% mutate(popup_text = eq_create_label(.))
eq_create_label <- function(earthquake_data) {
popup_info <- ""
popup_info <- ifelse(!is.na(earthquake_data$LOCATION_NAME),
paste0(popup_info, "<b>Location:</b>", earthquake_data$LOCATION_NAME, "<br />"),
popup_info)
popup_info <- ifelse(!is.na(earthquake_data$EQ_PRIMARY),
paste(popup_info, "<b>Magnitude:</b>", earthquake_data$EQ_PRIMARY, "<br />"),
popup_info)
popup_info <- ifelse(!is.na(earthquake_data$TOTAL_DEATHS),
paste(popup_info, "<b>Total deaths:</b>", earthquake_data$TOTAL_DEATHS, "<br />"),
popup_info)
return(popup_info)
# earthquake_data <- earthquake_data %>% mutate(popup_info = "")
#
# earthquake_data <- earthquake_data %>%
#   mutate(popup_info = ifelse(
#     !is.na(LOCATION_NAME),
#     paste0(popup_info, "<b>Location:</b>", LOCATION_NAME, "<br />"),
#     popup_info),
#     popup_info = ifelse(
#       !is.na(EQ_PRIMARY),
#       paste(popup_info, "<b>Magnitude:</b>", EQ_PRIMARY, "<br />"),
#       popup_info),
#     popup_info = ifelse(
#       !is.na(TOTAL_DEATHS),
#       paste(popup_info, "<b>Total deaths:</b>", TOTAL_DEATHS, "<br />"),
#       popup_info)
#   )
#
# return(earthquake_data)
}
test <- mexico_quakes %>% mutate(popup_text = eq_create_label(.))
head(test)
View(test)
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(tidyverse)
library(leaflet)
## Load data
data <- fread("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data-raw/signif.txt")
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Clean data and subset to Mexico
mexico_quakes <- data %>%
eq_clean_data() %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000)
annot_col <- "EQ_PRIMARY"
eq_map(mexico_quakes, annot_col = "DATE")
## Test function call
data %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
eq_map(annot_col = "DATE")
data %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
dplyr::mutate(popup_text = eq_create_label(.)) %>%
eq_map(annot_col = "popup_text")
############################ prepare environment ############################
library(data.table)
## Load data
data <- fread("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data-raw/signif.txt")
head(data)
devtools::use_data(data)
## Load data
signif <- fread("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data-raw/signif.txt")
devtools::use_data(signif)
devtools::use_data(signif, overwrite = TRUE)
url <- "https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt"
?download.file
?tempfile
temp <- tempfile()
download.file(url, temp)
temp
files <- unzip(temp, list = TRUE)
temp <- tempfile(fileext = ".zip")
download.file(url, temp)
files <- unzip(temp, list = TRUE)
test <- download.file(url)
temp <- tempfile(fileext = ".Rda")
download.file(url, temp)
url <- "https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt"
temp <- tempfile(fileext = ".txt")
download.file(url, temp)
download.file(url, temp, method = 'curl')
temp
head(temp)
getwd()
test <- fread(temp)
rm(list = ls())
library(data.table)
noaa_url <- "https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt"
temp <- tempfile(fileext = ".txt")
download.file(noaa_url, temp, method = 'curl')
noaa_data <- fread(temp)
temp
getwd()
save(noaa_data, file = "data/signif.rda")
rm(list = ls())
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
data <- fread("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/signif.rda")
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/signif.rda")
head(data)
library(data.table)
noaa_url <- "https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt"
temp <- tempfile(fileext = ".txt")
download.file(noaa_url, temp, method = 'curl')
noaa_data <- fread(temp)
head(noaa_data)
noaa_data
save(noaa_data, file = "data/signif.rda")
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/signif.rda")
head(data)
data
noaa_data
devtools::use_data(noaa_data, overwrite = TRUE)
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
head(data)
noaa_data
class(noaa_data)
noaa_data
devtools::use_data(noaa_data, overwrite = TRUE)
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
data
noaa_data <- as.data.frame(noaa_data)
noaa_data
devtools::use_data(noaa_data, overwrite = TRUE)
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
data
getwd
getwd()
save(noaa_data, file = "data/noaa_data")
save(noaa_data, file = "data/noaa_data.rda")
?write.csv
write.csv(noaa_data, file = "data/noaa_data.csv")
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
head(data)
data <- fread("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.csv")
head(data)
write.csv(noaa_data, file = "data-raw/noaa_data.csv")
library(data.table)
noaa_url <- "https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt"
temp <- tempfile(fileext = ".txt")
download.file(noaa_url, temp, method = 'curl')
noaa_data <- fread(temp)
write.csv(noaa_data, file = "data-raw/noaa_data.csv")
noaa_data
devtools::use_data(noaa_data, overwrite = TRUE)
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
data <- load("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load data
data <- load.Rdata("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load data
data <- load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(data.table)
noaa_url <- "https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt"
temp <- tempfile(fileext = ".txt")
download.file(noaa_url, temp, method = 'curl')
noaa_data <- fread(temp)
?readRDS
## Load data
data <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
saveRDS(noaa_data, file = "data/noaa_data.rda")
readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load data
data <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
head(data)
saveRDS(noaa_data, file = "data/noaa_data.rda")
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
data <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load data
data <- load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load data
data <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Build date variable
data <- eq_clean_data(data)
data <- eq_location_clean(data)
## Set key to date
setkey(data, DATE)
## Pull test set of 5 years
eq_subset <- data[DATE >= "2005-01-01" & DATE <= "2010-12-31"]
## Subset to 5 countries
top_countries <- eq_subset[,.N,by = COUNTRY][order(-N)][1:5, COUNTRY]
eq_subset <- eq_subset[COUNTRY %in% top_countries]
## Set country to factor
eq_subset[, COUNTRY := as.factor(COUNTRY)]
## Set earthquake magnitude to numeric
eq_subset[, EQ_PRIMARY := as.numeric(EQ_PRIMARY)]
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY))
dev.off()
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + labs(y = "")
rm(list = ls())
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
data <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Build date variable
data <- eq_clean_data(data)
data <- eq_location_clean(data)
## Set key to date
setkey(data, DATE)
## Pull test set of 5 years
eq_subset <- data[DATE >= "2005-01-01" & DATE <= "2010-12-31"]
## Subset to 5 countries
top_countries <- eq_subset[,.N,by = COUNTRY][order(-N)][1:5, COUNTRY]
eq_subset <- eq_subset[COUNTRY %in% top_countries]
## Set country to factor
eq_subset[, COUNTRY := as.factor(COUNTRY)]
## Set earthquake magnitude to numeric
eq_subset[, EQ_PRIMARY := as.numeric(EQ_PRIMARY)]
source("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R/geom_timeline.R")
source("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R/geom_timeline_labels.R")
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + labs(y = "")
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake()
rm(list = ls())
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
data <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Build date variable
data <- eq_clean_data(data)
data <- eq_location_clean(data)
## Set key to date
setkey(data, DATE)
## Pull test set of 5 years
eq_subset <- data[DATE >= "2005-01-01" & DATE <= "2010-12-31"]
## Subset to 5 countries
top_countries <- eq_subset[,.N,by = COUNTRY][order(-N)][1:5, COUNTRY]
eq_subset <- eq_subset[COUNTRY %in% top_countries]
## Set country to factor
eq_subset[, COUNTRY := as.factor(COUNTRY)]
## Set earthquake magnitude to numeric
eq_subset[, EQ_PRIMARY := as.numeric(EQ_PRIMARY)]
source("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R/geom_timeline.R")
source("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R/geom_timeline_labels.R")
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake()
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + labs(y = "")
dev.off()
?hline
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + geom_hline(aes(yintercept = 0.5, color = "lightgray"))
dev.off()
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + geom_hline(aes(yintercept = 0.5))
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + geom_hline(aes(yintercept = 0.5), color = "lightgray")
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + geom_hline(aes(yintercept = 0.5), color = "lightgray") + labs(y = "")
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake()
dev.off()
rm(list = ls())
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
data <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Build date variable
data <- eq_clean_data(data)
data <- eq_location_clean(data)
## Set key to date
setkey(data, DATE)
## Pull test set of 5 years
eq_subset <- data[DATE >= "2005-01-01" & DATE <= "2010-12-31"]
## Subset to 5 countries
top_countries <- eq_subset[,.N,by = COUNTRY][order(-N)][1:5, COUNTRY]
eq_subset <- eq_subset[COUNTRY %in% top_countries]
## Set country to factor
eq_subset[, COUNTRY := as.factor(COUNTRY)]
## Set earthquake magnitude to numeric
eq_subset[, EQ_PRIMARY := as.numeric(EQ_PRIMARY)]
source("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R/geom_timeline.R")
source("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R/geom_timeline_labels.R")
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + labs(y = "")
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS, size = EQ_PRIMARY)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake()
dev.off()
quartz()
g <- ggplot(data = eq_subset, aes(x = DATE, y = COUNTRY))
g + geom_timeline(xmin = "2005-01-01", xmax = "2010-12-31", aes(color = DEATHS)) + geom_timeline_labels(n_max = 20, aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY)) + theme_earthquake() + labs(y = "")
dev.off()
rm(list = ls())
## Load data
raw_noaa <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Build date variable
clean_noaa <- eq_clean_data(raw_noaa)
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Build date variable
clean_noaa <- eq_clean_data(raw_noaa)
clean_noaa <- eq_location_clean(clean_noaa)
## Set key to date
setkey(data, DATE)
## Set key to date
setkey(clean_noaa, DATE)
## Pull test set of 5 years
eq_subset <- clean_noaa[DATE >= "2005-01-01" & DATE <= "2010-12-31"]
## Subset to 5 countries
top_countries <- eq_subset[,.N,by = COUNTRY][order(-N)][1:5, COUNTRY]
eq_subset <- eq_subset[COUNTRY %in% top_countries]
## Set country to factor
eq_subset[, COUNTRY := as.factor(COUNTRY)]
## Set earthquake magnitude to numeric
eq_subset[, EQ_PRIMARY := as.numeric(EQ_PRIMARY)]
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(tidyverse)
library(leaflet)
## Load data
raw_noaa <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Clean data and subset to Mexico
mexico_quakes <- raw_noaa %>%
eq_clean_data() %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000)
eq_map(mexico_quakes, annot_col = "DATE")
## Plot earthquakes in Mexico with date labels in popup windows
raw_noaa %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
dplyr::mutate(popup_text = eq_create_label(.)) %>%
eq_map(annot_col = "popup_text")
## Plot earthquakes in Mexico with date labels in popup windows
raw_noaa %>%
eq_clean_data() %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
dplyr::mutate(popup_text = eq_create_label(.)) %>%
eq_map(annot_col = "popup_text")
rm(list = ls())
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(tidyverse)
library(leaflet)
## Load data
raw_noaa <- readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
## Plot earthquakes in Mexico with date labels in popup windows
raw_noaa %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
eq_map(annot_col = "DATE")
## Plot earthquakes in Mexico with date labels in popup windows
raw_noaa %>%
eq_clean_data() %>%
eq_location_clean() %>%
dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
dplyr::mutate(popup_text = eq_create_label(.)) %>%
eq_map(annot_col = "popup_text")
devtools::document()
library(data.table)
noaa_data <- fread("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data-raw/noaa_data.csv")
devtools::use_data(noaa_data)
devtools::use_data(noaa_data, overwrite = TRUE)
devtools::document()
devtools::document()
readRDS(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
rm(list = ls())
load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
head(noaa_data)
test <- load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
rm(test)
rm(list = ls())
load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
rm(list = ls())
############################ prepare environment ############################
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
## Load data
load(file = "/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/data/noaa_data.rda")
raw_noaa <- noaa_data
## Load cleaning functions
setwd("/Users/mpd10/Documents/Programming Resources/datasciencecoursera/Capstone/MsdrCapstoneMPS/R")
for (i in list.files()) source(i)
devtools::document()
rm(list = ls())
?eq_clean_data
?eq_clean_location
?eq_location_clean
devtools::document()
?eq_location_clean
?eq_clean_data
